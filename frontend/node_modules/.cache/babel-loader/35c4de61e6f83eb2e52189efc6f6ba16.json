{"ast":null,"code":"import _defineProperty from \"/Users/kathynguyen/Documents/microblog/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADDPOST, REMOVEPOST, EDITPOST, VOTE, LOADTITLES } from \"../actionTypes\"; // need this fn to avoid passing in all details about post\n// into title\n// passing all details into title would be wasteful \n\nfunction makeTitleFromPost(post) {\n  return {\n    id: post.id,\n    title: post.title,\n    description: post.description,\n    votes: post.votes\n  };\n}\n\nfunction sortByVote(posts) {\n  return posts.sort((a, b) => b.votes - a.votes);\n}\n\nexport default function rootReducer(state = [], action) {\n  switch (action.type) {\n    case LOADTITLES:\n      return sortByVote([...action.titles]);\n\n    case ADDPOST:\n      return sortByVote([...state, makeTitleFromPost(action.post)]);\n\n    case EDITPOST:\n      return state.map(title => title.id === action.payload.id ? makeTitleFromPost(action.payload.post) : title);\n\n    case REMOVEPOST:\n      return state.filter(title => title.id !== action.id);\n\n    case VOTE:\n      return sortByVote(state.map(title => title.id === action.payload.postId ? _objectSpread({}, title, {\n        votes: action.payload.votes\n      }) : title));\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kathynguyen/Documents/microblog/frontend/src/Reducers/titleReducer.js"],"names":["ADDPOST","REMOVEPOST","EDITPOST","VOTE","LOADTITLES","makeTitleFromPost","post","id","title","description","votes","sortByVote","posts","sort","a","b","rootReducer","state","action","type","titles","map","payload","filter","postId"],"mappings":";;;;;;AAAA,SACEA,OADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,IAJF,EAKEC,UALF,QAMO,gBANP,C,CAQA;AACA;AACA;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,SAAO;AACLC,IAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELC,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAFP;AAGLC,IAAAA,WAAW,EAAEH,IAAI,CAACG,WAHb;AAILC,IAAAA,KAAK,EAAEJ,IAAI,CAACI;AAJP,GAAP;AAMD;;AAED,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SAAOA,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACL,KAAF,GAAUI,CAAC,CAACJ,KAAjC,CAAP;AACD;;AACD,eAAe,SAASM,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKf,UAAL;AACE,aAAOO,UAAU,CAAC,CAAC,GAAGO,MAAM,CAACE,MAAX,CAAD,CAAjB;;AAEF,SAAKpB,OAAL;AACE,aAAOW,UAAU,CAAC,CAAC,GAAGM,KAAJ,EAAWZ,iBAAiB,CAACa,MAAM,CAACZ,IAAR,CAA5B,CAAD,CAAjB;;AAEF,SAAKJ,QAAL;AACE,aAAOe,KAAK,CAACI,GAAN,CACLb,KAAK,IAAIA,KAAK,CAACD,EAAN,KAAaW,MAAM,CAACI,OAAP,CAAef,EAA5B,GACTF,iBAAiB,CAACa,MAAM,CAACI,OAAP,CAAehB,IAAhB,CADR,GACgCE,KAFpC,CAAP;;AAIF,SAAKP,UAAL;AACE,aAAOgB,KAAK,CAACM,MAAN,CAAaf,KAAK,IAAIA,KAAK,CAACD,EAAN,KAAaW,MAAM,CAACX,EAA1C,CAAP;;AAEF,SAAKJ,IAAL;AACE,aAAOQ,UAAU,CAACM,KAAK,CAACI,GAAN,CAChBb,KAAK,IAAIA,KAAK,CAACD,EAAN,KAAaW,MAAM,CAACI,OAAP,CAAeE,MAA5B,qBACFhB,KADE;AACKE,QAAAA,KAAK,EAAEQ,MAAM,CAACI,OAAP,CAAeZ;AAD3B,WACqCF,KAF9B,CAAD,CAAjB;;AAIF;AACE,aAAOS,KAAP;AAtBJ;AAwBD","sourcesContent":["import {\n  ADDPOST,\n  REMOVEPOST,\n  EDITPOST,\n  VOTE,\n  LOADTITLES\n} from \"../actionTypes\";\n\n// need this fn to avoid passing in all details about post\n// into title\n// passing all details into title would be wasteful \n\nfunction makeTitleFromPost(post) {\n  return {\n    id: post.id,\n    title: post.title,\n    description: post.description,\n    votes: post.votes\n  };\n}\n\nfunction sortByVote(posts) {\n  return posts.sort((a, b) => b.votes - a.votes);\n}\nexport default function rootReducer(state = [], action) {\n  switch (action.type) {\n\n    case LOADTITLES:\n      return sortByVote([...action.titles]);\n\n    case ADDPOST:\n      return sortByVote([...state, makeTitleFromPost(action.post)]);\n\n    case EDITPOST:\n      return state.map(\n        title => title.id === action.payload.id ?\n        makeTitleFromPost(action.payload.post) : title);\n\n    case REMOVEPOST:\n      return state.filter(title => title.id !== action.id);\n\n    case VOTE:\n      return sortByVote(state.map(\n        title => title.id === action.payload.postId ?\n          { ...title, votes: action.payload.votes } : title));\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}