{"ast":null,"code":"var _jsxFileName = \"/Users/kathynguyen/Documents/microblog/frontend/src/Containers/TitleList.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { getTitlesFromAPI, sendVoteToAPI } from '../actions';\nimport Title from '../Components/Title';\nimport './TitleList.css';\n\nclass TitleList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleVote = this.handleVote.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.titles.length === 0) {\n      this.props.getTitlesFromAPI();\n    }\n  }\n\n  handleVote(id, direction) {\n    this.props.sendVoteToAPI(id, direction);\n  }\n\n  render() {\n    if (this.props.titles.length === 0) return React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Loading\");\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.props.titles.map(post => React.createElement(Title, {\n      key: post.id,\n      post: post,\n      handleVote: this.handleVote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    titles: state.titles\n  };\n}\n\nconst mapDispatchToProps = {\n  getTitlesFromAPI,\n  sendVoteToAPI\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleList);","map":{"version":3,"sources":["/Users/kathynguyen/Documents/microblog/frontend/src/Containers/TitleList.js"],"names":["connect","React","getTitlesFromAPI","sendVoteToAPI","Title","TitleList","Component","constructor","props","handleVote","bind","componentDidMount","titles","length","id","direction","render","map","post","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,YAAhD;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKH,KAAL,CAAWI,MAAX,CAAkBC,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,WAAKL,KAAL,CAAWN,gBAAX;AACD;AACF;;AAEDO,EAAAA,UAAU,CAACK,EAAD,EAAKC,SAAL,EAAgB;AACxB,SAAKP,KAAL,CAAWL,aAAX,CAAyBW,EAAzB,EAA6BC,SAA7B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKR,KAAL,CAAWI,MAAX,CAAkBC,MAAlB,KAA6B,CAAjC,EAAoC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEpC,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWI,MAAX,CAAkBK,GAAlB,CAAsBC,IAAI,IACzB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,IAAI,CAACJ,EAAjB;AAAqB,MAAA,IAAI,EAAEI,IAA3B;AAAiC,MAAA,UAAU,EAAE,KAAKT,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOD;;AAzBqC;;AA4BxC,SAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLR,IAAAA,MAAM,EAAEQ,KAAK,CAACR;AADT,GAAP;AAGD;;AAED,MAAMS,kBAAkB,GAAG;AACzBnB,EAAAA,gBADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAKA,eAAeH,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport React from 'react';\nimport { getTitlesFromAPI, sendVoteToAPI } from '../actions';\nimport Title from '../Components/Title';\nimport './TitleList.css';\n\nclass TitleList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleVote = this.handleVote.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.titles.length === 0) {\n      this.props.getTitlesFromAPI();\n    }\n  }\n\n  handleVote(id, direction) {\n    this.props.sendVoteToAPI(id, direction);\n  }\n\n  render() {\n    if (this.props.titles.length === 0) return <b>Loading</b>;\n\n    return (\n      <div className=\"row\">\n        {this.props.titles.map(post =>\n          <Title key={post.id} post={post} handleVote={this.handleVote} />\n        )}\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    titles: state.titles\n  }\n}\n\nconst mapDispatchToProps = {\n  getTitlesFromAPI,\n  sendVoteToAPI\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleList);"]},"metadata":{},"sourceType":"module"}