{"ast":null,"code":"import _defineProperty from \"/Users/kathynguyen/Desktop/microblog/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADDPOST, EDITPOST, REMOVEPOST, ADDCOMMENT, REMOVECOMMENT, LOADPOST, LOADONEPOST, ERROR, LOADCOMMENTS, VOTE } from \"../actionTypes\";\nexport default function rootReducer(state = {}, action) {\n  switch (action.type) {\n    case LOADPOST:\n      return _objectSpread({}, state, {\n        post: action.post\n      });\n\n    case ADDPOST:\n      return _objectSpread({}, state, {\n        [action.id]: _objectSpread({}, action.post, {\n          comments: []\n        })\n      });\n\n    case EDITPOST:\n      return _objectSpread({}, state, {\n        [action.payload.id]: action.payload.post\n      });\n\n    case REMOVEPOST:\n      console.log(\"lol\");\n      return state.filter(post => post.id !== action.payload.id);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kathynguyen/Desktop/microblog/frontend/src/Reducers/postReducer.js"],"names":["ADDPOST","EDITPOST","REMOVEPOST","ADDCOMMENT","REMOVECOMMENT","LOADPOST","LOADONEPOST","ERROR","LOADCOMMENTS","VOTE","rootReducer","state","action","type","post","id","comments","payload","console","log","filter"],"mappings":";;;;;;AAAA,SACEA,OADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,KARF,EASEC,YATF,EAUEC,IAVF,QAWO,gBAXP;AAaA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AAEtD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,QAAL;AACE,+BAAYM,KAAZ;AAAmBG,QAAAA,IAAI,EAAEF,MAAM,CAACE;AAAhC;;AAEF,SAAKd,OAAL;AACE,+BAAYW,KAAZ;AAAmB,SAACC,MAAM,CAACG,EAAR,qBAAkBH,MAAM,CAACE,IAAzB;AAA+BE,UAAAA,QAAQ,EAAE;AAAzC;AAAnB;;AAEF,SAAKf,QAAL;AACE,+BAAYU,KAAZ;AAAmB,SAACC,MAAM,CAACK,OAAP,CAAeF,EAAhB,GAAqBH,MAAM,CAACK,OAAP,CAAeH;AAAvD;;AAEF,SAAKZ,UAAL;AACEgB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,aAAOR,KAAK,CAACS,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACK,OAAP,CAAeF,EAAhD,CAAP;;AAGF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD","sourcesContent":["import {\n  ADDPOST,\n  EDITPOST,\n  REMOVEPOST,\n  ADDCOMMENT,\n  REMOVECOMMENT,\n  LOADPOST,\n  LOADONEPOST,\n  ERROR,\n  LOADCOMMENTS,\n  VOTE\n} from \"../actionTypes\";\n\nexport default function rootReducer(state = {}, action) {\n\n  switch (action.type) {\n\n    case LOADPOST:\n      return { ...state, post: action.post };\n\n    case ADDPOST:\n      return { ...state, [action.id]: { ...action.post, comments: [] } };\n\n    case EDITPOST:\n      return { ...state, [action.payload.id]: action.payload.post };\n\n    case REMOVEPOST:\n      console.log(\"lol\")\n      return state.filter(post => post.id !== action.payload.id);\n\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}