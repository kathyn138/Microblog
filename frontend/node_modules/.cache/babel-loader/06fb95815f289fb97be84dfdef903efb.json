{"ast":null,"code":"import _defineProperty from \"/Users/kathynguyen/Desktop/microblog/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADDPOST, REMOVEPOST, EDITPOST, VOTE, LOADTITLES } from \"../actionTypes\"; // need this fn to avoid passing in all details about post\n// into title\n// passing all details into title would be wasteful \n\nfunction makeTitleFromPost(post) {\n  return {\n    id: post.id,\n    title: post.title,\n    description: post.description,\n    votes: post.votes\n  };\n}\n\nexport default function rootReducer(state = [], action) {\n  let id, description, title, votes, titleIdx;\n\n  switch (action.type) {\n    case LOADTITLES:\n      return [...action.titles];\n\n    case ADDPOST:\n      return [...state, makeTitleFromPost(action.post)];\n\n    case EDITPOST:\n      // titleIdx = state.findIndex(title => title.id === action.payload.id);\n      var _action$payload$post = action.payload.post;\n      id = _action$payload$post.id;\n      title = _action$payload$post.title;\n      description = _action$payload$post.description;\n      votes = _action$payload$post.votes;\n      // return [\n      //   ...state.slice(0, titleIdx),\n      //   { id, title, description, votes },\n      //   ...state.slice(titleIdx + 1)\n      // ]\n      return state.map(title => title.id === action.payload.id ? {\n        id,\n        title,\n        description,\n        votes\n      } : title);\n\n    case REMOVEPOST:\n      return state.filter(title => title.id !== action.id);\n\n    case VOTE:\n      return state.map(title => title.id === action.payload.postId ? _objectSpread({}, title, {\n        votes: action.payload.votes\n      }) : title);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/kathynguyen/Desktop/microblog/frontend/src/Reducers/titleReducer.js"],"names":["ADDPOST","REMOVEPOST","EDITPOST","VOTE","LOADTITLES","makeTitleFromPost","post","id","title","description","votes","rootReducer","state","action","titleIdx","type","titles","payload","map","filter","postId"],"mappings":";;;;;;AAAA,SACEA,OADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,IAJF,EAKEC,UALF,QAMO,gBANP,C,CAQA;AACA;AACA;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,SAAO;AACLC,IAAAA,EAAE,EAAED,IAAI,CAACC,EADJ;AAELC,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAFP;AAGLC,IAAAA,WAAW,EAAEH,IAAI,CAACG,WAHb;AAILC,IAAAA,KAAK,EAAEJ,IAAI,CAACI;AAJP,GAAP;AAMD;;AAED,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AACtD,MAAIN,EAAJ,EAAQE,WAAR,EAAqBD,KAArB,EAA4BE,KAA5B,EAAmCI,QAAnC;;AAEA,UAAQD,MAAM,CAACE,IAAf;AAEE,SAAKX,UAAL;AACE,aAAO,CAAC,GAAGS,MAAM,CAACG,MAAX,CAAP;;AAEF,SAAKhB,OAAL;AACE,aAAO,CAAC,GAAGY,KAAJ,EAAWP,iBAAiB,CAACQ,MAAM,CAACP,IAAR,CAA5B,CAAP;;AAEF,SAAKJ,QAAL;AACE;AADF,iCAEuCW,MAAM,CAACI,OAAP,CAAeX,IAFtD;AAEKC,MAAAA,EAFL,wBAEKA,EAFL;AAESC,MAAAA,KAFT,wBAESA,KAFT;AAEgBC,MAAAA,WAFhB,wBAEgBA,WAFhB;AAE6BC,MAAAA,KAF7B,wBAE6BA,KAF7B;AAIE;AACA;AACA;AACA;AACA;AAEA,aAAOE,KAAK,CAACM,GAAN,CACLV,KAAK,IAAIA,KAAK,CAACD,EAAN,KAAaM,MAAM,CAACI,OAAP,CAAeV,EAA5B,GACT;AAAEA,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA,WAAb;AAA0BC,QAAAA;AAA1B,OADS,GAC2BF,KAF/B,CAAP;;AAIF,SAAKP,UAAL;AACE,aAAOW,KAAK,CAACO,MAAN,CAAaX,KAAK,IAAIA,KAAK,CAACD,EAAN,KAAaM,MAAM,CAACN,EAA1C,CAAP;;AAEF,SAAKJ,IAAL;AACE,aAAOS,KAAK,CAACM,GAAN,CACLV,KAAK,IAAIA,KAAK,CAACD,EAAN,KAAaM,MAAM,CAACI,OAAP,CAAeG,MAA5B,qBACFZ,KADE;AACKE,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAAP,CAAeP;AAD3B,WACqCF,KAFzC,CAAP;;AAIF;AACE,aAAOI,KAAP;AA/BJ;AAiCD","sourcesContent":["import {\n  ADDPOST,\n  REMOVEPOST,\n  EDITPOST,\n  VOTE,\n  LOADTITLES\n} from \"../actionTypes\";\n\n// need this fn to avoid passing in all details about post\n// into title\n// passing all details into title would be wasteful \n\nfunction makeTitleFromPost(post) {\n  return {\n    id: post.id,\n    title: post.title,\n    description: post.description,\n    votes: post.votes\n  };\n}\n\nexport default function rootReducer(state = [], action) {\n  let id, description, title, votes, titleIdx;\n\n  switch (action.type) {\n\n    case LOADTITLES:\n      return [...action.titles];\n\n    case ADDPOST:\n      return [...state, makeTitleFromPost(action.post)];\n\n    case EDITPOST:\n      // titleIdx = state.findIndex(title => title.id === action.payload.id);\n      ({ id, title, description, votes } = action.payload.post);\n\n      // return [\n      //   ...state.slice(0, titleIdx),\n      //   { id, title, description, votes },\n      //   ...state.slice(titleIdx + 1)\n      // ]\n\n      return state.map(\n        title => title.id === action.payload.id ?\n        { id, title, description, votes } : title);\n\n    case REMOVEPOST:\n      return state.filter(title => title.id !== action.id);\n\n    case VOTE:\n      return state.map(\n        title => title.id === action.payload.postId ?\n          { ...title, votes: action.payload.votes } : title);\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}