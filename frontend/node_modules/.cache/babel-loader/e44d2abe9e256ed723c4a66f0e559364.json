{"ast":null,"code":"import axios from \"axios\";\nimport { ADDPOST, EDITPOST, REMOVEPOST, LOADTITLES, ADDCOMMENT, REMOVECOMMENT, LOADPOST, LOADCOMMENTS, VOTE } from \"./actionTypes\";\nconst BASE_URL = \"http://localhost:5000\";\n\nfunction getTitles(titles) {\n  return {\n    type: LOADTITLES,\n    titles\n  };\n}\n\nexport function getTitlesFromAPI() {\n  return async function (dispatch) {\n    const response = await axios.get(\"\".concat(BASE_URL, \"/api/posts\"));\n    return dispatch(getTitles(response.data));\n  };\n}\n\nfunction handleError(error) {\n  return {\n    type: \"ERROR\",\n    error\n  };\n}\n\nexport function addPost(post, id) {\n  return {\n    type: ADDPOST,\n    post,\n    id\n  };\n}\nexport function addPostToApi(data, id) {\n  return async function thunk(dispatch) {\n    try {\n      let response = await axios.post(\"\".concat(BASE_URL, \"/api/posts\"), data);\n      dispatch(addPost(response.data, id));\n    } catch (error) {\n      dispatch(handleError(error));\n    }\n  };\n}\n\nfunction getPost(post) {\n  return {\n    type: LOADPOST,\n    post\n  };\n}\n\nexport function getPostFromApi(id) {\n  return async function thunk(dispatch) {\n    try {\n      let response = await axios.get(\"\".concat(BASE_URL, \"/api/posts/\").concat(id));\n      dispatch(getPost(response.data));\n    } catch (error) {\n      dispatch(handleError(error));\n    }\n  };\n} // export function editPost(id, newPost) {\n//   return {\n//     type: EDITPOST,\n//     payload: {\n//       id,\n//       newPost\n//     }\n//   };\n// }\n// export function removePost(id) {\n//   return {\n//     type: REMOVEPOST,\n//     payload: id\n//   };\n// }\n// export function updatePostFromApi(id, postData) {\n//   return async function thunk(dispatch) {\n//     try {\n//       let response = await axios.put(`${BASE_URL}/api/posts/${id}`, postData);\n//       dispatch(editPost(id, response.data))\n//     } catch (error) {\n//       dispatch(handleError(error));\n//     }\n//   }\n// }\n// export function deletePostFromApi(id) {\n//   return async function thunk(dispatch) {\n//     try {\n//       let response = await axios.delete(`${BASE_URL}/api/posts/${id}`);\n//       dispatch(removePost(response.data));\n//     } catch (error) {\n//       dispatch(handleError(error));\n//     }\n//   }\n// }\n// export function addComment(comment, postId) {\n//   return {\n//     type: ADDCOMMENT,\n//     payload: {\n//       comment,\n//       postId\n//     }\n//   };\n// }\n// export function addCommentToApi(postId, comment) {\n//   return async function thunk(dispatch) {\n//     try {\n//       let response = await axios.post(`${BASE_URL}/api/posts/${postId}/comments`, comment);\n//       dispatch(addComment(response.data, postId));\n//   } catch (error) {\n//       dispatch(handleError(error));\n//     }\n//   }\n// }\n// function getComments(comments, postId) {\n//   return { type: LOADCOMMENTS, comments, postId };\n// }\n// export function getCommentsFromApi(postId) {\n//   return async function thunk(dispatch) {\n//     try {\n//       let response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments`);\n//       dispatch(getComments(response.data, postId));\n//   } catch (error) {\n//       dispatch(handleError(error));\n//     }\n//   }\n// }\n// export function removeComment(commentId, postId) {\n//   return {\n//     type: REMOVECOMMENT,\n//     payload: {\n//       commentId,\n//       postId\n//     }\n//   };\n// }\n// export function deleteCommentFromApi(commentId, postId) {\n//     console.log(\"api\", commentId, postId)\n//   return async function thunk(dispatch) {\n//     try {\n//       await axios.delete(`${BASE_URL}/api/posts/${postId}/comments/${commentId}`);\n//       dispatch(removeComment(commentId, postId));\n//   } catch (error) {\n//       dispatch(handleError(error));\n//       console.log(\"in error\")\n//     }\n//   }\n// }\n// export function vote(postId, votes) {\n//   return {\n//     type: VOTE,\n//     payload: {\n//       postId, \n//       votes\n//     }\n//   };\n// }\n// export function sendVoteToAPI(postId, direction) {\n//   return async function thunk(dispatch) {\n//     try {\n//       const response = await axios.post(`${BASE_URL}/api/posts/${postId}/vote/${direction}`);\n//       dispatch(vote(postId, response.data.votes));\n//     } catch (error) {\n//       dispatch(handleError(error));\n//       console.log(\"in error\")\n//     }\n//   };\n// }","map":{"version":3,"sources":["/Users/kathynguyen/Desktop/microblog/frontend/src/actions.js"],"names":["axios","ADDPOST","EDITPOST","REMOVEPOST","LOADTITLES","ADDCOMMENT","REMOVECOMMENT","LOADPOST","LOADCOMMENTS","VOTE","BASE_URL","getTitles","titles","type","getTitlesFromAPI","dispatch","response","get","data","handleError","error","addPost","post","id","addPostToApi","thunk","getPost","getPostFromApi"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,OADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,aANF,EAOEC,QAPF,EAQEC,YARF,EASEC,IATF,QAUO,eAVP;AAYA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,SAAO;AACLC,IAAAA,IAAI,EAAET,UADD;AAELQ,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASE,gBAAT,GAA4B;AACjC,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,UAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,WAAaP,QAAb,gBAAvB;AACA,WAAOK,QAAQ,CAACJ,SAAS,CAACK,QAAQ,CAACE,IAAV,CAAV,CAAf;AACD,GAHD;AAID;;AAID,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAO;AACLP,IAAAA,IAAI,EAAE,OADD;AAELO,IAAAA;AAFK,GAAP;AAID;;AAED,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,EAAvB,EAA2B;AAChC,SAAO;AACLV,IAAAA,IAAI,EAAEZ,OADD;AAELqB,IAAAA,IAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;AAED,OAAO,SAASC,YAAT,CAAsBN,IAAtB,EAA4BK,EAA5B,EAAgC;AACrC,SAAO,eAAeE,KAAf,CAAqBV,QAArB,EAA+B;AACpC,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMhB,KAAK,CAACsB,IAAN,WAAcZ,QAAd,iBAAoCQ,IAApC,CAArB;AACAH,MAAAA,QAAQ,CAACM,OAAO,CAACL,QAAQ,CAACE,IAAV,EAAgBK,EAAhB,CAAR,CAAR;AACD,KAHD,CAGE,OAAOH,KAAP,EAAc;AACdL,MAAAA,QAAQ,CAACI,WAAW,CAACC,KAAD,CAAZ,CAAR;AACD;AACF,GAPD;AAQD;;AAED,SAASM,OAAT,CAAiBJ,IAAjB,EAAuB;AACrB,SAAO;AAAET,IAAAA,IAAI,EAAEN,QAAR;AAAkBe,IAAAA;AAAlB,GAAP;AACD;;AAED,OAAO,SAASK,cAAT,CAAwBJ,EAAxB,EAA4B;AACjC,SAAO,eAAeE,KAAf,CAAqBV,QAArB,EAA+B;AACpC,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,WAAaP,QAAb,wBAAmCa,EAAnC,EAArB;AACAR,MAAAA,QAAQ,CAACW,OAAO,CAACV,QAAQ,CAACE,IAAV,CAAR,CAAR;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACdL,MAAAA,QAAQ,CAACI,WAAW,CAACC,KAAD,CAAZ,CAAR;AACD;AACF,GAPD;AAQD,C,CACW;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport {\n  ADDPOST,\n  EDITPOST,\n  REMOVEPOST,\n  LOADTITLES,\n  ADDCOMMENT,\n  REMOVECOMMENT,\n  LOADPOST,\n  LOADCOMMENTS,\n  VOTE\n} from \"./actionTypes\";\n\nconst BASE_URL = \"http://localhost:5000\";\n\nfunction getTitles(titles) {\n  return {\n    type: LOADTITLES,\n    titles,\n  };\n}\n\nexport function getTitlesFromAPI() {\n  return async function (dispatch) {\n    const response = await axios.get(`${BASE_URL}/api/posts`);\n    return dispatch(getTitles(response.data));\n  };\n}\n\n\n\nfunction handleError(error) {\n  return {\n    type: \"ERROR\",\n    error\n  };\n}\n\nexport function addPost(post, id) {\n  return {\n    type: ADDPOST,\n    post,\n    id\n  };\n}\n\nexport function addPostToApi(data, id) {\n  return async function thunk(dispatch) {\n    try {\n      let response = await axios.post(`${BASE_URL}/api/posts`, data);\n      dispatch(addPost(response.data, id));\n    } catch (error) {\n      dispatch(handleError(error));\n    }\n  };\n}\n\nfunction getPost(post) {\n  return { type: LOADPOST, post };\n}\n\nexport function getPostFromApi(id) {\n  return async function thunk(dispatch) {\n    try {\n      let response = await axios.get(`${BASE_URL}/api/posts/${id}`);\n      dispatch(getPost(response.data));\n    } catch (error) {\n      dispatch(handleError(error));\n    }\n  };\n}\n            // export function editPost(id, newPost) {\n            //   return {\n            //     type: EDITPOST,\n            //     payload: {\n            //       id,\n            //       newPost\n            //     }\n            //   };\n            // }\n\n            // export function removePost(id) {\n            //   return {\n            //     type: REMOVEPOST,\n            //     payload: id\n            //   };\n            // }\n            // export function updatePostFromApi(id, postData) {\n//   return async function thunk(dispatch) {\n//     try {\n//       let response = await axios.put(`${BASE_URL}/api/posts/${id}`, postData);\n//       dispatch(editPost(id, response.data))\n//     } catch (error) {\n//       dispatch(handleError(error));\n//     }\n//   }\n// }\n\n// export function deletePostFromApi(id) {\n//   return async function thunk(dispatch) {\n//     try {\n//       let response = await axios.delete(`${BASE_URL}/api/posts/${id}`);\n//       dispatch(removePost(response.data));\n//     } catch (error) {\n//       dispatch(handleError(error));\n//     }\n//   }\n// }\n\n// export function addComment(comment, postId) {\n//   return {\n//     type: ADDCOMMENT,\n//     payload: {\n//       comment,\n//       postId\n//     }\n//   };\n// }\n\n// export function addCommentToApi(postId, comment) {\n//   return async function thunk(dispatch) {\n//     try {\n//       let response = await axios.post(`${BASE_URL}/api/posts/${postId}/comments`, comment);\n//       dispatch(addComment(response.data, postId));\n//   } catch (error) {\n//       dispatch(handleError(error));\n//     }\n//   }\n// }\n\n// function getComments(comments, postId) {\n//   return { type: LOADCOMMENTS, comments, postId };\n// }\n\n// export function getCommentsFromApi(postId) {\n//   return async function thunk(dispatch) {\n//     try {\n//       let response = await axios.get(`${BASE_URL}/api/posts/${postId}/comments`);\n//       dispatch(getComments(response.data, postId));\n//   } catch (error) {\n//       dispatch(handleError(error));\n//     }\n//   }\n// }\n\n// export function removeComment(commentId, postId) {\n//   return {\n//     type: REMOVECOMMENT,\n//     payload: {\n//       commentId,\n//       postId\n//     }\n//   };\n// }\n\n// export function deleteCommentFromApi(commentId, postId) {\n//     console.log(\"api\", commentId, postId)\n//   return async function thunk(dispatch) {\n//     try {\n//       await axios.delete(`${BASE_URL}/api/posts/${postId}/comments/${commentId}`);\n//       dispatch(removeComment(commentId, postId));\n//   } catch (error) {\n//       dispatch(handleError(error));\n//       console.log(\"in error\")\n//     }\n//   }\n// }\n\n// export function vote(postId, votes) {\n//   return {\n//     type: VOTE,\n//     payload: {\n//       postId, \n//       votes\n//     }\n//   };\n// }\n\n\n// export function sendVoteToAPI(postId, direction) {\n//   return async function thunk(dispatch) {\n//     try {\n//       const response = await axios.post(`${BASE_URL}/api/posts/${postId}/vote/${direction}`);\n//       dispatch(vote(postId, response.data.votes));\n//     } catch (error) {\n//       dispatch(handleError(error));\n//       console.log(\"in error\")\n//     }\n//   };\n// }"]},"metadata":{},"sourceType":"module"}